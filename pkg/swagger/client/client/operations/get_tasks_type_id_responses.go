// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Donders-Institute/filer-gateway/pkg/swagger/client/models"
)

// GetTasksTypeIDReader is a Reader for the GetTasksTypeID structure.
type GetTasksTypeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTasksTypeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTasksTypeIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTasksTypeIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTasksTypeIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTasksTypeIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTasksTypeIDOK creates a GetTasksTypeIDOK with default headers values
func NewGetTasksTypeIDOK() *GetTasksTypeIDOK {
	return &GetTasksTypeIDOK{}
}

/* GetTasksTypeIDOK describes a response with status code 200, with default header values.

success
*/
type GetTasksTypeIDOK struct {
	Payload *models.ResponseBodyTaskResource
}

func (o *GetTasksTypeIDOK) Error() string {
	return fmt.Sprintf("[GET /tasks/{type}/{id}][%d] getTasksTypeIdOK  %+v", 200, o.Payload)
}
func (o *GetTasksTypeIDOK) GetPayload() *models.ResponseBodyTaskResource {
	return o.Payload
}

func (o *GetTasksTypeIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseBodyTaskResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksTypeIDBadRequest creates a GetTasksTypeIDBadRequest with default headers values
func NewGetTasksTypeIDBadRequest() *GetTasksTypeIDBadRequest {
	return &GetTasksTypeIDBadRequest{}
}

/* GetTasksTypeIDBadRequest describes a response with status code 400, with default header values.

bad request
*/
type GetTasksTypeIDBadRequest struct {
	Payload *models.ResponseBody400
}

func (o *GetTasksTypeIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /tasks/{type}/{id}][%d] getTasksTypeIdBadRequest  %+v", 400, o.Payload)
}
func (o *GetTasksTypeIDBadRequest) GetPayload() *models.ResponseBody400 {
	return o.Payload
}

func (o *GetTasksTypeIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseBody400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTasksTypeIDNotFound creates a GetTasksTypeIDNotFound with default headers values
func NewGetTasksTypeIDNotFound() *GetTasksTypeIDNotFound {
	return &GetTasksTypeIDNotFound{}
}

/* GetTasksTypeIDNotFound describes a response with status code 404, with default header values.

task not found
*/
type GetTasksTypeIDNotFound struct {
}

func (o *GetTasksTypeIDNotFound) Error() string {
	return fmt.Sprintf("[GET /tasks/{type}/{id}][%d] getTasksTypeIdNotFound ", 404)
}

func (o *GetTasksTypeIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTasksTypeIDInternalServerError creates a GetTasksTypeIDInternalServerError with default headers values
func NewGetTasksTypeIDInternalServerError() *GetTasksTypeIDInternalServerError {
	return &GetTasksTypeIDInternalServerError{}
}

/* GetTasksTypeIDInternalServerError describes a response with status code 500, with default header values.

failure
*/
type GetTasksTypeIDInternalServerError struct {
	Payload *models.ResponseBody500
}

func (o *GetTasksTypeIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tasks/{type}/{id}][%d] getTasksTypeIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetTasksTypeIDInternalServerError) GetPayload() *models.ResponseBody500 {
	return o.Payload
}

func (o *GetTasksTypeIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseBody500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
